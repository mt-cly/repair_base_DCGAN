[train]
# batch size
batch_size = 60

# the size of first layer in G
noise_size = 100

# you can set it as big as possible and shut down process whenever, beacause the model would be saved frequently
epochs = 6000

# you will get some images generated by G for inspecting the result of training after each epoch
n_samples = 10

# learning rate of training
learning_rate = 0.001

# movement,as a param of AdamOptimizer
beta1 = 0.4

# the number of model to save
max_to_keep = 100

# save and refresh the model after 'break_time' epochs
break_time = 5

[repair]
epochs = 100

learning_rate = 0.007

beta = 0.4

# save the result of repaired image after 'break_time' epochs
break_time = 100

# if the generated image and target image is similar in pixel, we assume that they are same. (0.03 * 255 = 7.7)
threshold = 0.03

# the model would be used for repairing
model_index = 800

[image]
# the number of image to train
image_num = 400

image_height = 64

image_width = 64

image_depth = 3

[file]
# the path of train data
read_path = ./data_1/

# the path of image prepared to repair
target_path = ./data_1/target.jpg

# the path for saving images created by some method in 'image_util.py', it's not necessary if you get the train data by any other way
save_path = ./data_1/

# the path for saving images generated by G
result_path = ./result/

# the path for saving images repaired
repair_path = ./repair/

# the path for saving trained models
model_path = ./model/
